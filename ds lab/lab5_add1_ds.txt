#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100

typedef struct {
    int arr[MAX_SIZE];
    int top1;  // Top of stack1
    int top2;  // Top of stack2
} Queue;

void initialize(Queue* queue) {
    queue->top1 = -1;
    queue->top2 = -1;
}

void enqueue(Queue* queue, int value) {
    if (queue->top1 < MAX_SIZE - 1) {
        queue->arr[++queue->top1] = value;
    } else {
        printf("Queue is full!\n");
    }
}

int dequeue(Queue* queue) {
    if (queue->top2 == -1) {
        if (queue->top1 == -1) {
            printf("Queue is empty!\n");
            return -1;  // Return a sentinel value
        } else {
            while (queue->top1 >= 0) {
                queue->arr[++queue->top2] = queue->arr[queue->top1--];
            }
        }
    }

    return queue->arr[queue->top2--];
}

int main() {
    Queue queue;
    initialize(&queue);

    int choice, value;

    do {
        printf("\n1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Quit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to enqueue: ");
                scanf("%d", &value);
                enqueue(&queue, value);
                break;
            case 2:
                printf("Dequeued: %d\n", dequeue(&queue));
                break;
            case 3:
                break;
            default:
                printf("Invalid choice!\n");
        }
    } while (choice != 3);

    return 0;
}