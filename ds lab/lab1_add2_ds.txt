#include <stdio.h>

// Binary Search
int binarySearch(int arr[], int left, int right, int target) {
    if (left <= right) {
        int mid = left + (right - left) / 2;

        if (arr[mid] == target)
            return mid;

        if (arr[mid] > target)
            return binarySearch(arr, left, mid - 1, target);

        return binarySearch(arr, mid + 1, right, target);
    }

    return -1;
}

// Selection Sort
void selectionSort(int arr[], int n, int index) {
    if (index >= n - 1)
        return;

    int min = index;
    for (int j = index + 1; j < n; j++) {
        if (arr[j] < arr[min])
            min = j;
    }

    int temp = arr[min];
    arr[min] = arr[index];
    arr[index] = temp;

    selectionSort(arr, n, index + 1);
}

// Multiplication using Repeated Addition
int multiply(int a, int b) {
    if (b == 0)
        return 0;
    return a + multiply(a, b - 1);
}

int main() {
    // Binary Search
    int arr[] = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19};
    int target = 13;
    int n = sizeof(arr) / sizeof(arr[0]);
    int result = binarySearch(arr, 0, n - 1, target);

    if (result != -1)
        printf("Element %d found at index %d\n", target, result);
    else
        printf("Element %d not found\n", target);

    // Selection Sort
    int arr2[] = {64, 34, 25, 12, 22, 11, 90};
    int n2 = sizeof(arr2) / sizeof(arr2[0]);
    selectionSort(arr2, n2, 0);

    printf("Sorted array using Selection Sort: ");
    for (int i = 0; i < n2; i++) {
        printf("%d ", arr2[i]);
    }
    printf("\n");

    // Multiplication using Repeated Addition
    int num1 = 7, num2 = 5;
    int result2 = multiply(num1, num2);

    printf("%d multiplied by %d is %d\n", num1, num2, result2);

    return 0;
}
